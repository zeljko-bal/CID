
import /example2/external_option1 as /exo1
import /example2/external_option2

Bool outer_option1:
	cli: "--outer-option1", "-oo1|-noo1"

Cmd command1 "Command1":
	description: "Command 1, Command 1, does whatever command 1 does."
	help: "help"
	parameters:
	{
		/exo1
		/example2/external_option2
		outer_option1
		
		Num counter_par:
			cli: "-{count:v}"
            constraints:
				min: 4 "minimum is 4"
				max: 8 
				integer
				custom:
					<<
						return (value % 2) === 0;
					>>
					"value must be even number"
			
		Num num_par1:
			cli: "--num_par1={}"
		
		Str str_par1 "String param 1":
			description: "Custom description. {default_desc} And so on.."
			help: "Help about str_par1."
			default: "default val"
			empty_str: Allowed
			#multiplicity: 2 # TODO test with mult = 2 and fix gui 
			cli: "--par1 {}", "-p1={}"
		
		Str str_par_default_None:
			default: None
			cli: "--def-none={}"
			widget: password
		
		Date date_par:
			cli: "--date={}"
			date_format: "dd.mm.yyyy"
			
		File file_par:
			cli: "--file-par={*}"
			
		Choice choice_par:
			cli: "--choice-par={*|,}"
			choices: "choice1", "choice2"
		
		Num tuple_par:
			cli: "--tuple-par {'x', 'y'}", "-tp {2}"
			constraints:
				min: 4 "minimum is 4, actual values are {value.x} and {value.y}"
				max: 8 
			
		Str tuple_par2:
			cli: "--tuple-par2 {'xx', 'yy'}", "-tp2 {2}"
			empty_str: Allowed
			multiplicity: *
			
		Str many_par:
			cli: "--many-par {*}"
			empty_str: Allowed
			multiplicity: *
			default: "True"
			
		Str separated_par:
			cli: "--sep-par {*|,}"
			
		Str positional1
		Str positional_many:
			multiplicity: *
	}
	constraints:
		<<
			console.log('Command1 constraint got sub_command: ' + sub_command);
			console.log('Command1 constraint got args:');
			console.log(args);
            return true;
		>>
		"command constraint message"
	usage:
		- [/exo1] [/example2/external_option2] outer_option1 positional1 -- positional_many
		- str_par1 outer_option1 {sub_command}
		- [str_par_default_None date_par] counter_par file_par|choice_par (tuple_par tuple_par2 many_par)|separated_par
	#gui:
	#	grid:
	#	{
	#		[/exo1                     |outer_option1  |str_par_default_None |file_par       ]
	#		[/example2/external_option2|   str_par1    |>>>>>>>>>>>>>>>>>>>>>|positional_many]
	#	}
	commands:
	{
		Cmd sub1 "Sub command 1":
			description: "Sub Command 1, Sub Command 1, does whatever sub command 1 does."
			help: "asdsdvr revbrtb thbtrgr sergsreg esrgsergr gsergserg erg"
			parameters:
			{
				Bool inner_opt:
					cli: "--inner-opt"
			}
		Cmd sub2:
			parameters:
			{
				outer_option1
			} 
		Cmd sub3:
			description: "Description for command 3"
			parameters:
			{
				outer_option1
				Bool help:
					cli: "--help"
			}
			cli_command: "subcommand3"
		Cmd sub4
	}
	